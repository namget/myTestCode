apply plugin: 'com.android.application'

apply plugin: 'kotlin-android'

apply plugin: 'kotlin-android-extensions'

apply plugin: 'kotlin-kapt'


android {
    compileSdkVersion 29
    buildToolsVersion "29.0.2"
    defaultConfig {
        applicationId "com.namget.testcode"
        minSdkVersion 19
        targetSdkVersion 29
        versionCode 1
        versionName "1.0"
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }
    buildTypes {
        debug {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }

        release {
            minifyEnabled true
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }

    dataBinding {
        enabled = true
    }


    android {
        compileOptions {
            sourceCompatibility JavaVersion.VERSION_1_8
            targetCompatibility JavaVersion.VERSION_1_8
        }
    }

}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"

    def androidXVersion = "1.0.0"
    implementation "com.google.android.material:material:$androidXVersion"
    implementation "androidx.appcompat:appcompat:$androidXVersion"
    implementation "androidx.core:core-ktx:$androidXVersion"

    //constraint
    def constraintVersion = "2.0.0-beta2"
    implementation "androidx.constraintlayout:constraintlayout:$constraintVersion"

    //rx
    def rxAndroidVersion = "2.1.1"
    implementation "io.reactivex.rxjava2:rxandroid:$rxAndroidVersion"
    def rxKotlinVersion = "2.4.0"
    implementation "io.reactivex.rxjava2:rxkotlin:$rxKotlinVersion"

    //retrofit
    def retrofitVersion = "2.4.0"
    implementation "com.squareup.retrofit2:retrofit:$retrofitVersion"
    implementation "com.squareup.retrofit2:converter-gson:$retrofitVersion"
    implementation "com.squareup.retrofit2:adapter-rxjava2:$retrofitVersion"

    //okhttp
    def httpVersion = "3.8.0"
    implementation "com.squareup.okhttp3:okhttp:$httpVersion"
    implementation "com.squareup.okhttp3:logging-interceptor:$httpVersion"

    //lifecycle extension
    def lifecycleExtension = "2.2.0-alpha03"
    implementation "androidx.lifecycle:lifecycle-extensions:$lifecycleExtension"

    //koin
    def koinVersion = "2.0.1"
    implementation "org.koin:koin-core:$koinVersion"
    //안드로이드 context 주입, 안드로이드 log 지원 기능을 제공
    implementation "org.koin:koin-android:$koinVersion"
    // or ViewModel for AndroidX
    implementation "org.koin:koin-androidx-viewmodel:$koinVersion"

    //coroutine
    def coroutineVersion = "1.3.0"
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-core:$coroutineVersion"
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-android:$coroutineVersion"

    //zxing
    //3.3.0 => sdk 14~  , 4.0.0 = SDK => 24~
    implementation('com.journeyapps:zxing-android-embedded:3.6.0') { transitive = false }
    implementation 'com.google.zxing:core:3.3.2'

    //glide
    def glideVersion = "4.10.0"
    implementation "com.github.bumptech.glide:glide:$glideVersion"
    annotationProcessor "com.github.bumptech.glide:compiler:$glideVersion"


    def roomVersion = "2.2.0"

    implementation "androidx.room:room-runtime:$roomVersion"
    kapt "androidx.room:room-compiler:$roomVersion"
    annotationProcessor "androidx.room:room-compiler:$roomVersion" // use kapt for Kotlin
    // optional - RxJava support for Room
    implementation "androidx.room:room-rxjava2:$roomVersion"
    // optional - Coroutines support for Room
//    implementation "androidx.room:room-coroutines:$room_version"


    //leakcanary
    //ui에서 메모리 누수 점검
    /*def leakcanaryVersion = "2.0-beta-3"
    debugImplementation "com.squareup.leakcanary:leakcanary-android:$leakcanaryVersion"*/


    testImplementation 'junit:junit:4.12'
    androidTestImplementation 'androidx.test:runner:1.2.0'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.2.0'
}
